syntax = "proto3";

package interchange.dex;

import "interchange/dex/coin.proto";
//import "interchange/dex/msg.proto";
import "interchange/dex/restaking.proto";

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

import "cosmos_proto/cosmos.proto";

option go_package = "interchange/x/dex/types";

// Msg defines the Msg service.
service Msg {
  rpc SendCreatePair  (MsgSendCreatePair ) returns (MsgSendCreatePairResponse );
  rpc SendSellOrder   (MsgSendSellOrder  ) returns (MsgSendSellOrderResponse  );
  rpc SendBuyOrder    (MsgSendBuyOrder   ) returns (MsgSendBuyOrderResponse   );
  rpc CancelSellOrder (MsgCancelSellOrder) returns (MsgCancelSellOrderResponse);
  rpc CancelBuyOrder  (MsgCancelBuyOrder ) returns (MsgCancelBuyOrderResponse );

  // CreateValidator defines a method for creating a new validator.
  rpc CreateValidator(MsgCreateValidator) returns (MsgCreateValidatorResponse);
}
message MsgSendCreatePair {
  string sourceDenom      = 5;
  string targetDenom      = 6;
  string creator          = 1;
  string port             = 2;
  string channelID        = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendCreatePairResponse {}

message MsgSendSellOrder {
  string amountDenom      = 5;
  int32  amount           = 6;
  string priceDenom       = 7;
  int32  price            = 8;
  string creator          = 1;
  string port             = 2;
  string channelID        = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendSellOrderResponse {}

message MsgSendBuyOrder {
  string amountDenom      = 5;
  int32  amount           = 6;
  string priceDenom       = 7;
  int32  price            = 8;
  string creator          = 1;
  string port             = 2;
  string channelID        = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendBuyOrderResponse {}

message MsgCancelSellOrder {
  string creator     = 1;
  string port        = 2;
  string channel     = 3;
  string amountDenom = 4;
  string priceDenom  = 5;
  int32  orderID     = 6;
}

message MsgCancelSellOrderResponse {}

message MsgCancelBuyOrder {
  string creator     = 1;
  string port        = 2;
  string channel     = 3;
  string amountDenom = 4;
  string priceDenom  = 5;
  int32  orderID     = 6;
}

message MsgCancelBuyOrderResponse {}



// MsgCreateValidator defines a SDK message for creating a new validator.
message MsgCreateValidator {
  // NOTE(fdymylja): this is a particular case in which
  // if validator_address == delegator_address then only one
  // is expected to sign, otherwise both are.
  // option (interchange.dex.signer) = "delegator_address";
  // option (interchange.dex.signer) = "validator_address";

  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  interchange.dex.Description     description         = 1 [(gogoproto.nullable) = false];
  interchange.dex.CommissionRates commission          = 2 [(gogoproto.nullable) = false];
  string          min_self_delegation = 3 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];
  string                   delegator_address = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string                   validator_address = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  google.protobuf.Any      pubkey            = 6 [(cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
  interchange.dex.Coin value             = 7 [(gogoproto.nullable) = false];
}

// MsgCreateValidatorResponse defines the Msg/CreateValidator response type.
message MsgCreateValidatorResponse {}